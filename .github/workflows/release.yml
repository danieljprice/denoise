# This is a basic workflow to help you get started with Actions

name: release

# trigger on git tags starting with the letter v
on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build:
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - name: checkout code
    - uses: actions/checkout@v2
      with: 
        submodules: recursive

    - name: build release tarball
      run: cd ..; dir=denoise-${{ github.ref }}; mv denoise $dir; tar cvf $dir.tar $dir; gzip $dir.tar

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Denoise ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ../denoise-${{ github.ref }}.tar.gz
        asset_name: denoise-${{ github.ref }}.tar.gz
        asset_content_type: application/gzip

    - name: get SHA
      id: shasum
      run: |
        echo ::set-output name=sha::"$(shasum -a 256 ./target/denoise-$version.tar.gz | awk '{printf $1}')"
